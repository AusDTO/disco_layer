<script src="/bower_components/json-editor/dist/jsoneditor.min.js"></script>
<div class="container theme-showcase" role="main">
    <br><br>

    <div class='row'>
        <div class='span12 col-md-12 columns twelve large-12'>
            <h2>Editor</h2>

            <form method="post" id="submitForm">
                <button class="btn btn-lg btn-primary" type="submit">Submit</button>

            <textarea id='output' name="output" style='display: none;'
                      class='form-control' form="submitForm"></textarea>
            <!-- Button HTML (to Trigger Modal) -->
            <a href="#myModal" class="btn btn-lg btn-danger" data-toggle="modal">Delete...</a>

            <!-- Modal HTML -->
            <div id="myModal" class="modal fade">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title">Confirmation</h4>
                        </div>
                        <div class="modal-body">
                            <p>Do you want to delete this document?</p>
                            <p class="text-warning"><small>There is no undo for this action.</small></p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                            <button type="submit" name="delete" value="delete" class="btn btn-danger">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
            </form>
            <div id='editor'></div>
        </div>


    </div>
</div>
<script>
    var schema =  {{{schema}}} ;
    window.startval = {{{content}}};
    // Divs/textareas on the page
    var $schema = document.getElementById('schema');
    var $output = document.getElementById('output');
    var $editor = document.getElementById('editor');
    var $validate = document.getElementById('validate');

    var jsoneditor;
    JSONEditor.defaults.options.theme = 'bootstrap3';
    JSONEditor.defaults.options.iconlib = 'bootstrap3';

    JSONEditor.defaults.editors.autocomplete = JSONEditor.defaults.editors.string.extend({
        build: function () {
            this._super();
            var type = this.options.type;
            var myinput = this;
            $(this.input).autocomplete({
                select: function (e, ui) {
                    // reset the field value to force the editor to see the update
                    myinput.input.value = "";
                    // call setValue - it should update correctly now
                    myinput.setValue(ui.item.value);
                    // reset the value in the field (required because this method is called when you first enter the field - it would blank the field content otherwise)
                    myinput.input.value = e.target.value;
                },
                source: "/editor/autocomplete/{{repoAccount}}/{{repoName}}/{{orgPath}}/" + type
            })
        }
    })
    // Resolver function
    JSONEditor.defaults.resolvers.unshift(function (schema) {
        /* eg.       "options": {
            "autocomplete": true,
            "type": "dimension-type"
          } */
        if (schema.type === "string" && schema.options && schema.options.autocomplete) {
            // Use your custom editor if the schema matches
            return "autocomplete";
        }
    });
    var reload = function (keep_value) {
        var startval = (jsoneditor && keep_value) ? jsoneditor.getValue() : window.startval;
        window.startval = undefined;

        if (jsoneditor) jsoneditor.destroy();
        jsoneditor = new JSONEditor($editor, {
            // Enable fetching schemas via ajax
            ajax: true,
            keep_oneof_values: false, // See https://github.com/jdorn/json-editor/issues/398

            // The schema for the editor
            schema: schema,
            remove_empty_properties: true,
            startval: startval
        });
        window.jsoneditor = jsoneditor;

        // When the value of the editor changes, update the JSON output and validation message
        jsoneditor.on('change', function () {
            var json = jsoneditor.getValue();

            $output.value = JSON.stringify(json, null, 2);

            var validation_errors = jsoneditor.validate();
            // Show validation errors if there are any
            if (validation_errors.length) {
                window.alert(JSON.stringify(validation_errors, null, 2));
            }

        });
    };
    $output.value = '';


    reload();

</script>
