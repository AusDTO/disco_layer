(function(a){"use strict";if("undefined"==typeof sigma)throw new Error("sigma not in scope.");sigma.utils.pkg("sigma.plugins");var b=function(b,c){function d(a){var b={};return a.forEach(function(a){b[a]=!0}),Object.keys(b)}function e(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(a[c]);return b}function f(a,b){var c=a._assoc_mat[b]?Object.keys(a._assoc_mat[b]):[],d=0;return c.forEach(function(c){var e=a._assoc_mat[b][c]||1;b==c&&(e*=2),d+=e}),d}function g(a,b){if("undefined"==typeof a._assoc_mat[b])return[];var c=Object.keys(a._assoc_mat[b]);return c}function h(b,c,d){return b._assoc_mat[c]?b._assoc_mat[c][d]:a}function i(a){var b=0;return a.edges.forEach(function(a){b+=a.weight}),b}function j(a,b){l(a,b);var c=a.edges.map(function(a){return a.source+"_"+a.target}).indexOf(b.source+"_"+b.target);-1!=c?a.edges[c].weight=b.weight:a.edges.push(b)}function k(a){var b={};return a.forEach(function(a){b[a.source]=b[a.source]||{},b[a.source][a.target]=a.weight,b[a.target]=b[a.target]||{},b[a.target][a.source]=a.weight}),b}function l(a,b){a._assoc_mat[b.source]=a._assoc_mat[b.source]||{},a._assoc_mat[b.source][b.target]=b.weight,a._assoc_mat[b.target]=a._assoc_mat[b.target]||{},a._assoc_mat[b.target][b.source]=b.weight}function m(a){if(null==a||"object"!=typeof a)return a;var b=a.constructor();for(var c in a)b[c]=m(a[c]);return b}function n(a,b,c){b.nodes_to_com={},b.total_weight=0,b.internals={},b.degrees={},b.gdegrees={},b.loops={},b.total_weight=i(a),a.nodes.forEach("undefined"==typeof c?function(c,d){b.nodes_to_com[c]=d;var e=f(a,c);if(0>e)throw new Error("A node has a negative degree. Use positive weights.");b.degrees[d]=e,b.gdegrees[c]=e,b.loops[c]=h(a,c,c)||0,b.internals[d]=b.loops[c]}:function(d){var e=c[d];b.nodes_to_com[d]=e;var h=f(a,d);b.degrees[e]=(b.degrees[e]||0)+h,b.gdegrees[d]=h;var i=0,j=g(a,d);j.forEach(function(b){var f=a._assoc_mat[d][b];if(0>=f)throw new Error("A node has a negative degree. Use positive weights.");c[b]==e&&(i+=b==d?f:f/2)}),b.internals[e]=(b.internals[e]||0)+i})}function o(a){var b=a.total_weight,c=0,f=d(e(a.nodes_to_com));return f.forEach(function(d){var e=a.internals[d]||0,f=a.degrees[d]||0;b>0&&(c=c+e/b-Math.pow(f/(2*b),2))}),c}function p(a,b,c){var d={},e=g(b,a);return e.forEach(function(e){if(e!=a){var f=b._assoc_mat[a][e]||1,g=c.nodes_to_com[e];d[g]=(d[g]||0)+f}}),d}function q(a,b,c,d){d.nodes_to_com[a]=+b,d.degrees[b]=(d.degrees[b]||0)+(d.gdegrees[a]||0),d.internals[b]=(d.internals[b]||0)+c+(d.loops[a]||0)}function r(a,b,c,d){d.degrees[b]=(d.degrees[b]||0)-(d.gdegrees[a]||0),d.internals[b]=(d.internals[b]||0)-c-(d.loops[a]||0),d.nodes_to_com[a]=-1}function s(a){var b=0,c=m(a),d={},e=Object.keys(a);return e.forEach(function(e){var f=a[e],g="undefined"==typeof d[f]?-1:d[f];-1==g&&(d[f]=b,g=b,b+=1),c[e]=g}),c}function t(a,b){for(var c=!0,d=0,e=o(b),f=e;c&&d!=z&&(e=f,c=!1,d+=1,a.nodes.forEach(function(d){var e=b.nodes_to_com[d],f=(b.gdegrees[d]||0)/(2*b.total_weight),g=p(d,a,b);r(d,e,g[e]||0,b);var h=e,i=0,j=Object.keys(g);j.forEach(function(a){var c=g[a]-(b.degrees[a]||0)*f;c>i&&(i=c,h=a)}),q(d,h,g[h]||0,b),h!=e&&(c=!0)}),f=o(b),!(A>f-e)););}function u(a,b){var c,f,g={nodes:[],edges:[],_assoc_mat:{}},i=e(a);return g.nodes=g.nodes.concat(d(i)),b.edges.forEach(function(b){f=b.weight||1;var d=a[b.source],e=a[b.target];c=h(g,d,e)||0;var i=c+f;j(g,{source:d,target:e,weight:i})}),g}function v(a,b){for(var c=m(a[0]),d=1;b+1>d;d++)Object.keys(c).forEach(function(b){var e=b,f=c[b];c[e]=a[d][f]});return c}function w(a,b){if(0==a.edges.length){var c={};return a.nodes.forEach(function(a){c[a]=a}),c}var d={};n(x,d,b);var e=o(d),f=[];t(x,d);var g=o(d),h=s(d.nodes_to_com);f.push(h),e=g;var i=u(h,x);for(n(i,d);;){if(t(i,d),g=o(d),A>g-e)break;h=s(d.nodes_to_com),f.push(h),e=g,i=u(h,i),n(i,d)}return f}var x,y,z=-1,A=1e-7,B={},C=[];x={nodes:b.nodes().map(function(a){return a.id}),edges:b.edges(),_assoc_mat:k(b.edges())},y=c;var D={};return D.run=function(a){return y=a||y,B={},C=w(x,y),this},D.countLevels=function(){return C.length-1},D.getPartitions=function(b){if(b!==a&&(1>b||b>C.length-1))throw new RangeError('Invalid argument: "level" is not between 1 and '+C.length-1+" included.");return v(C,b||C.length-1)},D.countPartitions=function(a){return 1+Math.max.apply(null,Object.keys(a).map(function(b){return a[b]}))},D.setResults=function(a){var c=this,d=a||{},e=this.getPartitions(d.level);return b.nodes().forEach(function(a){"function"==typeof d.setter?(c.setter=d.setter,c.setter.call(a,e[a.id])):"function"==typeof c.setter?c.setter.call(a,e[a.id]):a._louvain=e[a.id]}),this},D};sigma.plugins.louvain=function(a,c){var d=c||{},e=b(a,d.partitions).run();return e.setResults({level:e.countLevels(),setter:d.setter}),e}}).call(this);
//# sourceMappingURL=sigma.statistics.louvain.min.js.map